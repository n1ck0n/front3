const apiUrl = "http://localhost:8080/admin/products";

// üìå –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã
function loadProducts() {
    fetch(apiUrl)
        .then(response => response.json())
        .then(products => {
            const table = document.getElementById("productTable");
            table.innerHTML = "";
            products.forEach(product => {
                const row = document.createElement("tr");
                row.innerHTML = `
                    <td>${product.id}</td>
                    <td>${product.name}</td>
                    <td>${product.price} ‚ÇΩ</td>
                    <td>${product.description}</td>
                    <td>${product.category.join(", ")}</td>
                    <td>
                        <button class="btn btn-warning btn-sm" onclick="editProduct(${product.id})">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                        <button class="btn btn-danger btn-sm" onclick="deleteProduct(${product.id})">–£–¥–∞–ª–∏—Ç—å</button>
                    </td>
                `;
                table.appendChild(row);
            });
        })
        .catch(error => console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:", error));
}

// üìå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
document.getElementById("productForm").addEventListener("submit", function (event) {
    event.preventDefault();
    const editId = this.dataset.editId; // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä

    const name = document.getElementById("name").value;
    const price = document.getElementById("price").value;
    const description = document.getElementById("description").value;
    const category = document.getElementById("category").value.split(",");

    const updatedProduct = { name, price: Number(price), description, category };

    if (editId) {
        // üìå –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä
        fetch(`${apiUrl}/${editId}`, {
            method: "PUT",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(updatedProduct)
        })
        .then(() => {
            loadProducts();
            document.getElementById("productForm").reset();
            delete this.dataset.editId; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            document.getElementById("submitButton").textContent = "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä";
        })
        .catch(error => console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞:", error));
    } else {
        // üìå –ï—Å–ª–∏ —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä
        fetch(apiUrl, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(updatedProduct)
        })
        .then(() => {
            loadProducts();
            document.getElementById("productForm").reset();
        })
        .catch(error => console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞:", error));
    }
});

// üìå –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
function deleteProduct(id) {
    if (confirm("–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä?")) {
        fetch(`${apiUrl}/${id}`, { method: "DELETE" })
            .then(() => loadProducts())
            .catch(error => console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞:", error));
    }
}

// üìå –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
function editProduct(id) {
    fetch(apiUrl)
        .then(response => response.json())
        .then(products => {
            const product = products.find(p => p.id === id);
            if (product) {
                document.getElementById("name").value = product.name;
                document.getElementById("price").value = product.price;
                document.getElementById("description").value = product.description;
                document.getElementById("category").value = product.category.join(", ");
                document.getElementById("productForm").dataset.editId = id;
                document.getElementById("submitButton").textContent = "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è";
            }
        })
        .catch(error => console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞:", error));
}

// üìå –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener("DOMContentLoaded", loadProducts);
