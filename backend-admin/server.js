const express = require("express");
const cors = require("cors");
const fs = require("fs");
const bodyParser = require("body-parser");
const path = require("path");

const app = express();
const PORT = 8080;

app.use(cors());
app.use(bodyParser.json());

const productsFile = path.join(__dirname, "../backend-api/data/products.json");

// üìå –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
const getProducts = () => {
    if (!fs.existsSync(productsFile)) return [];
    const data = fs.readFileSync(productsFile);
    return JSON.parse(data);
};

// üìå –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤
const saveProducts = (products) => {
    fs.writeFileSync(productsFile, JSON.stringify(products, null, 2));
};

// üìå –†–∞–∑–¥–∞—á–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –∞–¥–º–∏–Ω–∫–∏
app.use(express.static(path.join(__dirname, "../frontend")));

// üìå –û—Ç–∫—Ä—ã–≤–∞–µ–º `admin.html` –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ `/admin`
app.get("/admin", (req, res) => {
    res.sendFile(path.join(__dirname, "../frontend/admin.html"));
});

// üìå –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤
app.get("/admin/products", (req, res) => {
    res.json(getProducts());
});

// üìå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤
app.post("/admin/products", (req, res) => {
    const products = getProducts();
    const newProducts = req.body;

    if (Array.isArray(newProducts)) {
        newProducts.forEach(product => {
            product.id = products.length + 1;
            products.push(product);
        });
    } else {
        newProducts.id = products.length + 1;
        products.push(newProducts);
    }

    saveProducts(products);
    res.status(201).json({ message: "–¢–æ–≤–∞—Ä—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã", products: newProducts });
});

// üìå –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –ø–æ ID
app.put("/admin/products/:id", (req, res) => {
    const products = getProducts();
    const id = parseInt(req.params.id);
    const index = products.findIndex(p => p.id === id);

    if (index !== -1) {
        products[index] = { ...products[index], ...req.body };
        saveProducts(products);
        res.json({ message: "–¢–æ–≤–∞—Ä –æ–±–Ω–æ–≤–ª—ë–Ω", product: products[index] });
    } else {
        res.status(404).json({ message: "–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω" });
    }
});

// üìå –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –ø–æ ID
app.delete("/admin/products/:id", (req, res) => {
    let products = getProducts();
    const id = parseInt(req.params.id);
    const filteredProducts = products.filter(p => p.id !== id);

    if (filteredProducts.length !== products.length) {
        saveProducts(filteredProducts);
        res.json({ message: "–¢–æ–≤–∞—Ä —É–¥–∞–ª—ë–Ω" });
    } else {
        res.status(404).json({ message: "–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω" });
    }
});

// üìå –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => console.log(`–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ http://localhost:${PORT}/admin`));
